export const QA051 = [
  ["애플리케이션에 잠재되어 있는 결함을 찾아내는 일련의 행위 또는 절차로, 개발된 소프트웨어가 고객의 요구사항을 만족시키는지 확인(Validation)하고 소프트웨어가 기능을 정확히 수행하는지 검증(Verification)하는 것", "애플리케이션 테스트"],
  ["사용자의 입장에서 개발한 소프트웨어가 고객의 요구사항에 맞게 구현되었는지를 확인하는 것", "확인", "Validation"],
  ["개발자의 입장에서 개발한 소프트웨어가 명세서에 맞게 만들어졌는지를 점검하는 것", "검증", "Verification"],
  ["애플리케이션 테스트의 기본 원리 중 소프트웨어의 잠재적인 결함을 줄일 수 있지만 소프트웨어에 결함이 없다고 증명할 수는 없다는 원리", "완벽한 테스트 불가능"],
  ["애플리케이션 테스트의 기본 원리 중 애플리케이션의 20%에 해당하는 코드에서 전체 결함의 80%가 발견된다는 법칙", "파레토 법칙", "Pareto Principle"],
  ["애플리케이션 테스트의 기본 원리 중 동일한 테스트 케이스로 동일한 테스트를 반복하면 더 이상 결함이 발견되지 않는 현상", "살충제 패러독스", "Pesticide Paradox"],
  ["애플리케이션 테스트의 기본 원리 중 소프트웨어의 특징, 테스트 환경, 테스터의 역량 등 정황(Context)에 따라 테스트 결과가 달라질 수 있으므로, 정황에 따라 테스트를 다르게 수행해야 한다는 원리", "테스팅은 정황(Context) 의존"],
  ["애플리케이션 테스트의 기본 원리 중 소프트웨어 결함을 모두 제거해도 사용자의 요구사항을 만족시키지 못하면 해당 소프트웨어는 품질이 높다고 말할 수 없다는 원리", "오류-부재의 궤변", "Absence of Errors Fallacy"],
  ["애플리케이션 테스트의 기본 원리 중 테스트를 많이 하면 할수록 미래에 발생할 위험을 줄일 수 있다는 원리", "테스트와 위험은 반비례"],
  ["애플리케이션 테스트의 기본 원리 중 테스트는 작은 부분에서 시작하여 점점 확대하며 진행해야 한다는 원리", "테스트의 점진적 확대"],
  ["애플리케이션 테스트의 기본 원리 중 테스트는 개발자와 관계없는 별도의 팀에서 수행해야 한다는 원리", "테스트의 별도 팀 수행"]
];