export const QA001 = [
  // ["운영체제의 정의", "컴퓨터 시스템의 자원들을 효율적으로 관리하며, 사용자가 컴퓨터를 편리하고 효과적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임"],
  ["컴퓨터 시스템의 자원들을 효율적으로 관리하며, 사용자가 컴퓨터를 편리하고 효과적으로 사용할 수 있도록 환경을 제공하는 여러 프로그램의 모임", "운영체제", "Operating System", "OS"],
  ["운영체제의 풀네임(Full-Name)", "Operating System"],
  ["운영체제의 영어 약자", "OS"],
  ["운영체제의 대표적인 종류", "Windows, UNIX, LINUX, MacOS, MS-DOS"],
  ["운영체제의 목적", "처리 능력(Throughput), 반환 시간(Turn Around Time), 사용 가능도(Availaability), 신뢰도(Realiability)"],
  // ["운영체제의 목적 중 처리 능력의 정의", "일정 시간 내에 시스템이 처리하는 일의 양"],
  ["운영체제의 목적 중 일정 시간 내에 시스템이 처리하는 일의 양", "처리 능력", "Throughput"],
  // ["운영체제의 목적 중 반환 시간의 정의", "시스템에 작업을 의뢰한 시간부터 처리가 완료될 때까지 걸린 시간"],
  ["운영체제의 목적 중 시스템에 작업을 의뢰한 시간부터 처리가 완료될 때까지 걸린 시간", "반환 시간", "Turn Around Time"],
  // ["운영체제의 목적 중 사용 가능도의 정의", "시스템을 사용할 필요가 있을 때 즉시 사용 가능한 정도"],
  ["운영체제의 목적 중 시스템을 사용할 필요가 있을 때 즉시 사용 가능한 정도", "사용 가능도", "Availability"],
  // ["운영체제의 목적 중 신뢰도의 정의", "시스템이 주어진 문제를 정확하게 해결하는 정도"],
  ["운영체제의 목적 중 시스템이 주어진 문제를 정확하게 해결하는 정도", "신뢰도", "Reliability"],
  ["운영체제의 목적 중 처리 능력의 영어 풀네임(Full-Name)", "Throughput"],
  ["운영체제의 목적 중 반환 시간의 영어 풀네임(Full-Name)", "Turn Around Time"],
  ["운영체제의 목적 중 사용 가능도의 영어 풀네임(Full-Name)", "Availability"],
  ["운영체제의 목적 중 신뢰도의 영어 풀네임(Full-Name)", "Reliability"],
  // ["운영체제의 기능", "프로세서, 기억장치, 입출력장치, 파일 및 정보 등의 자원을 관리, 자원의 스케줄링 기능 제공, 사용자와 시스템 간의 편리한 인터페이스 제공 등"]
];

export const QA002 = [
  // ["Windows의 기본 설명", "1990년대 마이크로소프트(Microsoft) 사가 개발한 운영체제"],
  ["1990년대 마이크로소프트(Microsoft) 사가 개발한 운영체제", "Windows"],
  ["Windows의 주요 특징 6가지", "그래픽 사용자 인터페이스, 선점형 멀티태스킹, 자동 감지 기능, OLE, 255자의 긴 파일명, Single-User 시스템"],
  ["그래픽 사용자 인터페이스, 선점형 멀티태스킹, 자동 감지 기능, OLE, 255자의 긴 파일명, Single-User 시스템의 특징을 갖는 운영체제", "Windows"],
  ["키보드로 명령어를 직접 입력하지 않고, 마우스로 아이콘이나 메뉴를 선택하여 모든 작업을 수행하는 방식", "그래픽 사용자 인터페이스", "Graphic User Interfase", "GUI"],
  ["그래픽 사용자 인터페이스의 영어 풀네임(Full-Name)", "Graphic User Interfase"],
  ["그래픽 사용자 인터페이스의 영어 약자", "GUI"],
  ["동시에 여러 개의 프로그램을 실행하는 멀티태스킹을 하면서 운영체제가 각 작업의 CPU 이용 시간을 제어하여 응용 프로그램 실행 중 문제가 발생하면 해당 프로그램을 강제 종료시키고 모든 시스템 자원을 반환하는 방식", "선점형 멀티태스킹", "Preemptive Multi-Tasking"],
  ["선점형 멀티태스킹의 영어 풀네임(Full-Name)", "Preemptive Multi-Tasking"],
  ["Preemptive Multi-Tasking의 한글 뜻", "선점형 멀티태스킹"],
  ["컴퓨터 시스템에서 프린트나 사운드 카드 등의 하드웨어를 설치했을 때 해당 하드웨어를 사용하는 데 필요한 시스템 환경을 운영체제가 자동으로 구성해 주는 기능", "자동 감지 기능", "PnP", "Plug and Play"],
  ["자동 감지 기능의 영어 풀네임(Full-Name)", "Plug and Play"],
  ["자동 감지 기능의 영어 약자", "PnP"],
  ["다른 여러 응용 프로그램에서 작성된 문자나 그림 등의 개체(Object)를 현재 작성 중인 문서에 자유롭게 연결(Linking)하거나 삽입(Embedding)하여 편집할 수 있게 하는 기능", "OLE", "Object Linking and Embedding"],
  ["OLE의 영어 풀네임(Full-Name)", "Object Linking and Embedding"],
  ["\ / * ? \" < > | 를 제외한 모든 문자 및 공백을 사용하여 최대 255자까지 파일 이름을 지정할 수 있음", "255자의 긴 파일명"],
  ["컴퓨터 한 대를 한 사람만이 독점해서 사용함", "Single-User 시스템"],
  // ["UNIX의 기본 설명", "1960년대 AT&T 벨(Bell) 연구소, MIT, General Electric이 공동 개발한 운영체제"],
  ["1960년대 AT&T 벨(Bell) 연구소, MIT, General Electric이 공동 개발한 운영체제", "UNIX"],
  // ["UNIX의 특징", "시분할 시스템을 위해 설계된 대화식 운영체제, 다중 사용자, 다중 작업을 지원함, 트리 구조의 파일 시스템을 가짐, 대부분 C언어로 작성되어 있어 이식성이 높으며 장치, 프로세스 간의 호환성이 높음"],
  ["시분할 시스템을 위해 설계된 대화식 운영체제, 다중 사용자, 다중 작업을 지원함, 트리 구조의 파일 시스템을 가짐, 대부분 C언어로 작성되어 있어 이식성이 높으며 장치, 프로세스 간의 호환성이 높은 특징을 갖는 운영체제", "UNIX"],
  // ["UNIX 시스템의 구성", "커널(Kernel), 쉘(Shell), 유틸리티 프로그램(Utility Program)"],
  ["시스템 구성이 커널(Kernel), 쉘(Shell), 유틸리티 프로그램(Utility Program)인 운영체제", "UNIX"],
  // ["커널(Kernel)", "UNIX의 가장 핵심적인 부분으로 하드웨어 간의 인터페이스 역할을 담당함. 프로세스/기억장치/파일/입출력 관리. 프로세스간 통신, 데이터 전송 및 변환 등 여러 가지 기능을 수행함"],
  ["UNIX의 가장 핵심적인 부분으로 하드웨어 간의 인터페이스 역할을 담당함. 프로세스/기억장치/파일/입출력 관리. 프로세스간 통신, 데이터 전송 및 변환 등 여러 가지 기능을 수행함", "커널", "Kernel"],
  // ["쉘(Shell)", "사용자의 명령어를 인식하여 프로그램을 호출하고 명령을 수행하는 명령어 해석기임. 시스템과 사용자 간의 인터페이스를 담당함"],
  ["사용자의 명령어를 인식하여 프로그램을 호출하고 명령을 수행하는 명령어 해석기임. 시스템과 사용자 간의 인터페이스를 담당함", "쉘", "Shell"],
  // ["쉘(Shell)의 종류", "Bourne Shell, C Shell, Korn Shell"],
  ["일반 사용자가 작성한 응용 프로그램을 처리하는 데 사용함. DOS에서의 외부 명령어에 해당됨", "유틸리티 프로그램", "Utility Program"],
  // ["유틸리티 프로그램(Utility Program)", "일반 사용자가 작성한 응용 프로그램을 처리하는 데 사용함. DOS에서의 외부 명령어에 해당됨"],
  // ["유틸리티 프로그램(Utility Program)의 종류", "에디터, 컴파일러, 인터프리터, 디버거 등"],
  // ["LINUX의 정의", "1991년 리누스 토발즈(Linus Torvalds)가 UNIX를 기반으로 개발한 운영체제"],
  ["1991년 리누스 토발즈(Linus Torvalds)가 UNIX를 기반으로 개발한 운영체제", "LINUX"],
  // ["LINUX의 특징", "다양한 플랫폼에 설치하여 사용이 가능하며, 재배포가 가능함. UNIX와 완벽하게 호환됨. 대부부의 특징이 UNIX와 동일함"],
  ["다양한 플랫폼에 설치하여 사용이 가능하며, 재배포가 가능함. UNIX와 완벽하게 호환됨. 대부부의 특징이 UNIX와 동일한 특징을 갖는 운영체제", "LINUX"],
  // ["MacOS의 정의", "1980년대 애플(Apple) 사가 UNIX를 기반으로 개발한 운영체제"],
  ["1980년대 애플(Apple) 사가 UNIX를 기반으로 개발한 운영체제", "MacOS"],
  ["MacOS의 특징", "아이맥(iMac)과 맥북(MacBook) 등 애플 사에서 생산하는 제품에서만 사용이 가능함. 드라이버 설치 및 install과 uninstall의 과정이 단순함"],
  ["아이맥(iMac)과 맥북(MacBook) 등 애플 사에서 생산하는 제품에서만 사용이 가능함. 드라이버 설치 및 install과 uninstall의 과정이 단순한 특징을 갖는 운영체제", "MacOS"],
  // ["Android의 정의", "구글(Google) 사에서 개발한 리눅스 커널 기반의 개방형 모바일 운영체제"],
  ["구글(Google) 사에서 개발한 리눅스 커널 기반의 개방형 모바일 운영체제", "Android"],
  // ["Android의 특징", "모든 코드가 공개된 개방형 소프트웨어. 자바와 코틀린으로 애플리케이션을 작성함. 스마트폰 등의 휴대용 장치에서 주로 사용됨"],
  ["모든 코드가 공개된 개방형 소프트웨어. 자바와 코틀린으로 애플리케이션을 작성함. 스마트폰 등의 휴대용 장치에서 주로 사용되는 특징을 갖는 운영체제", "Android"],
  // ["iOS의 정의", "애플(Apple) 사에서 개발한 유닉스 기반의 모바일 운영체제"],
  ["애플(Apple) 사에서 개발한 유닉스 기반의 모바일 운영체제", "iOS"],
  // ["iOS의 특징", "아이폰, 아이팟 터치, 아이패드 등에 내장됨. 애플사 고유의 모바일 운영체제로 타사 제품은 iOS를 탑재할 수 없음"],
  ["아이폰, 아이팟 터치, 아이패드 등에 내장됨. 애플사 고유의 모바일 운영체제로 타사 제품은 iOS를 탑재할 수 없는 특징을 갖는 운영체제", "iOS"]
];

export const QA003 = [
  ["Windows 기본 명령어 중 현재 디렉터리의 파일 목록을 표시하는 명령어", "DIR"],
  ["Windows 기본 명령어 중 DIR의 기능", "현재 디렉터리의 파일 목록을 표시함"],
  ["Windows 기본 명령어 중 파일을 복사하는 명령어", "COPY"],
  ["Windows 기본 명령어 중 COPY의 기능", "파일을 복사함"],
  ["Windows에서 abc.txt 파일을 forder 디렉터리로 복사하는 명령문", "copy abc.txt forder"],
  ["Windows 기본 명령어 중 파일을 삭제하는 명령어", "DEL"],
  ["Windows 기본 명령어 중 DEL의 기능", "파일을 삭제함"],
  ["Windows에서 abc.txt 파일을 삭제하는 명령문", "del abc.txt"],
  ["Windows 기본 명령어 중 파일의 내용을 표시하는 명령어", "TYPE"],
  ["Windows 기본 명령어 중 TYPE의 기능", "파일의 내용을 표시함"],
  ["Windows에서 abc.txt 파일의 내용을 표시하는 명령문", "type abc.txt"],
  ["Windows 기본 명령어 중 파일의 이름을 변경하는 명령어", "REN"],
  ["Windows 기본 명령어 중 REN의 기능", "파일의 이름을 변경함"],
  ["Windows에서 abc.txt 파일의 이름을 123.txt로 변경하는 명령문", "ren abc.txt 123.txt"],
  ["Windows 기본 명령어 중 디렉터리를 생성하는 명령어", "MD"],
  ["Windows 기본 명령어 중 MD의 기능", "디렉터리를 생성함"],
  ["Windows에서 forder 디렉터리를 생성하는 명령문", "md forder"],
  ["Windows 기본 명령어 중 동일한 드라이브에서 디렉터리의 위치를 변경하는 명령어", "CD"],
  ["Windows 기본 명령어 중 CD의 기능", "동일한 드라이브에서 디렉터리의 위치를 변경함"],
  ["Windows에서 디렉터리의 위치를 forder로 변경하는 명령문", "cd forder"],
  ["Windows 기본 명령어 중 화면의 내용을 지우는 명령어", "CLS"],
  ["Windows 기본 명령어 중 CLS의 기능", "화면의 내용을 지움"],
  ["Windows 기본 명령어 중 파일의 속성을 변경하는 명령어", "ATTRIB"],
  ["Windows 기본 명령어 중 ATTRIB의 기능", "파일의 속성을 변경함"],
  ["Windows에서 abc.txt의 파일 속성을 읽기 전용으로 변경하는 명령문", "attrib +r abc.txt"],
  ["Windows 기본 명령어 중 파일에서 문자열을 찾는 명령어", "FIND"],
  ["Windows 기본 명령어 중 FIND의 기능", "파일에서 문자열을 찾음"],
  ["Windows에서 abc.txt에서 \"123\"이 포함된 문자열을 찾는 명령문", "find \"123\" abc.txt"],
  ["Windows 기본 명령어 중 디스크의 상태를 점검하는 명령어", "CHKDSK"],
  ["Windows 기본 명령어 중 CHKDSK의 기능", "디스크의 상태를 점검함"],
  ["Windows 기본 명령어 중 디스크 표면을 트랙과 섹터로 나누어 초기화하는 명령어", "FORMAT"],
  ["Windows 기본 명령어 중 FORMAT의 기능", "디스크 표면을 트랙과 섹터로 나누어 초기화함"],
  ["Windows에서 c 드라이브를 초기화하는 명령문", "format c:"],
  ["Windows 기본 명령어 중 파일을 이동하는 명령어", "MOVE"],
  ["Windows 기본 명령어 중 MOVE의 기능", "파일을 이동함"],
  ["Windows에서 abc.txt 파일을 forder 디렉터리로 이동하는 명령문", "move abc.txt forder"],
  ["UNIX/LINUX 기본 명령어 중 파일 내용을 화면에 표시하는 명령어", "cat"],
  ["UNIX/LINUX 기본 명령어 중 cat의 기능", "파일 내용을 화면에 표시함"],
  ["UNIX/LINUX에서 abc.txt 파일 내용을 화면에 표시하는 명령문", "cat abc.txt"],
  ["UNIX/LINUX 기본 명령어 중 디렉터리의 위치를 변경하는 명령어", "cd"],
  ["UNIX/LINUX 기본 명령어 중 cd의 기능", "디렉터리의 위치를 변경함"],
  ["UNIX/LINUX에서 forder 디렉터리로 이동하는 명령문", "cd forder"],
  ["UNIX/LINUX 기본 명령어 중 파일의 보호 모드를 설정하여 파일의 사용 허가를 지정하는 명령어", "chmod"],
  ["UNIX/LINUX 기본 명령어 중 chmod의 기능", "파일의 보호 모드를 설정하여 파일의 사용 허가를 지정함"],
  ["UNIX/LINUX에서 사용자에게 abc.txt 파일의 읽기, 쓰기, 실행 권한을 추가하는 명령문", "chmod u+rwx abc.txt"],
  ["UNIX/LINUX에서 그룹에게 abc.txt 파일의 읽기, 쓰기, 실행 권한을 삭제하는 명령문", "chmod g-rwx abc.txt"],
  ["UNIX/LINUX에서 기타 사용자에게 abc.txt 파일의 읽기, 쓰기, 실행 권한을 부여하는 명령문", "chmod o=rwx abc.txt"],
  ["UNIX/LINUX 기본 명령어 중 파일 소유자와 그룹을 변경하는 명령어", "chown"],
  ["UNIX/LINUX 기본 명령어 중 chown의 기능", "파일 소유자와 그룹을 변경함"],
  ["UNIX/LINUX에서 abc.txt 파일의 소유자를 member1로 변경하는 명령문", "chown member1 abc.txt"],
  ["UNIX/LINUX 기본 명령어 중 파일을 복사하는 명령어", "cp"],
  ["UNIX/LINUX 기본 명령어 중 cp의 기능", "파일을 복사함"],
  ["UNIX/LINUX에서 abc.txt 파일을 forder 디렉터리에 abc2.txt로 이름을 변경하여 복사하는 명령문", "cp abc.txt forder/abc2.txt"],
  ["UNIX/LINUX 기본 명령어 중 파일을 삭제하는 명령어", "rm"],
  ["UNIX/LINUX 기본 명령어 중 rm의 기능", "파일을 삭제함"],
  ["UNIX/LINUX에서 abc.txt를 삭제하는 명령문", "rm abc.txt"],
  ["UNIX/LINUX 기본 명령어 중 파일을 찾는 명령어", "find"],
  ["UNIX/LINUX 기본 명령어 중 find의 기능", "파일을 찾음"],
  ["UNIX/LINUX에서 abc.txt 파일을 찾는 명령문", "find abc.txt"],
  ["UNIX/LINUX 기본 명령어 중 파일 시스템을 검사하고 보수하는 명령어", "fsck"],
  ["UNIX/LINUX 기본 명령어 중 fsck의 기능", "파일 시스템을 검사하고 보수함"],
  ["UNIX/LINUX에서 /dev/sda11에 기록된 모든 파일 시스템을 검사하고 보수하는 명령문", "fsck /dev/sda1"],
  ["UNIX/LINUX 기본 명령어 중 PID(프로세스 고유 번호)를 이용하여 프로세스를 종료하는 명령어", "kill"],
  ["UNIX/LINUX 기본 명령어 중 kill의 기능", "PID(프로세스 고유 번호)를 이용하여 프로세스를 종료함"],
  ["UNIX/LINUX에서 PID가 1234인 프로세스를 종료하는 명령문", "kill 1234"],
  ["UNIX/LINUX 기본 명령어 중 새로운 프로세스를 생성하는 명령어", "fork"],
  ["UNIX/LINUX 기본 명령어 중 fork의 기능", "새로운 프로세스를 생성함"],
  ["UNIX/LINUX 기본 명령어 중 프로세스의 이름을 이용하여 프로세스를 종료하는 명령어", "killall"],
  ["UNIX/LINUX 기본 명령어 중 killall의 기능", "프로세스의 이름을 이용하여 프로세스를 종료함"],
  ["UNIX/LINUX에서 프로세스 이름이 abc인 모든 프로세스를 종료하는 명령문", "killall abc"],
  ["UNIX/LINUX 기본 명령어 중 현재 디렉터리의 파일 목록을 표시하는 명령어", "ls"],
  ["UNIX/LINUX 기본 명령어 중 ls의 기능", "현재 디렉터리의 파일 목록을 표시함"],
  ["UNIX/LINUX 기본 명령어 중 디렉터리를 생성하는 명령어", "mkdir"],
  ["UNIX/LINUX 기본 명령어 중 mkdir의 기능", "디렉터리를 생성함"],
  ["UNIX/LINUX에서 forder 디렉터리를 생성하는 명령문", "mkdir forder"],
  ["UNIX/LINUX 기본 명령어 중 디렉터리를 삭제하는 명령어", "rmdir"],
  ["UNIX/LINUX 기본 명령어 중 rmdir의 기능", "디렉터리를 삭제함"],
  ["UNIX/LINUX에서 forder 디렉터리를 삭제하는 명령문", "rmdir forder"],
  ["UNIX/LINUX 기본 명령어 중 파일을 이동하는 명령어", "mv"],
  ["UNIX/LINUX 기본 명령어 중 mv의 기능", "파일을 이동함"],
  ["UNIX/LINUX에서 abc.txt 파일을 forder 디렉터리에 abc2.txt로 이름을 변경하여 이동하는 명령문", "mv abc.txt forder/abc2.txt"],
  ["UNIX/LINUX 기본 명령어 중 현재 실행중인 프로세스를 표시하는 명령어", "ps"],
  ["UNIX/LINUX 기본 명령어 중 ps의 기능", "현재 실행중인 프로세스를 표시함"],
  ["UNIX/LINUX 기본 명령어 중 현재 작업중인 디렉터리 경로를 화면에 표시하는 명령어", "pwd"],
  ["UNIX/LINUX 기본 명령어 중 pwd의 기능", "현재 작업중인 디렉터리 경로를 화면에 표시함"],
  ["UNIX/LINUX 기본 명령어 중 시스템의 프로세스와 메모리 사용 현황을 표시하는 명령어", "top"],
  ["UNIX/LINUX 기본 명령어 중 top의 기능", "시스템의 프로세스와 메모리 사용 현황을 표시함"],
  ["UNIX/LINUX 기본 명령어 중 현재 시스템에 접속해 있는 사용자를 표시하는 명령어", "who"],
  ["UNIX/LINUX 기본 명령어 중 who의 기능", "현재 시스템에 접속해 있는 사용자를 표시함"],
  ["UNIX/LINUX에서 'batch.sh' 파일에 대해 소유자와 그룹에게는 전체 권한을, 기타 사용자에게는 읽기와 실행 권한만 부여하는 명령문을 8진법 숫자를 이용하여 작성하기", "chmod 775 batch.sh"],
];

export const QA004 = [
  ["데이터들을 논리적인 구조로 조직화하거나 물리적인 공간에 구축한 것", "데이터저장소", "데이터 저장소"],
  ["데이터 및 데이터 간의 연관성, 제약조건을 식별하여 논리적인 구조로 조직화한 것", "논리 데이터 저장소", "논리 데이터저장소"],
  ["논리 데이터저장소를 소프트웨어가 운용된 환경의 물리적 특성을 고려하여 실제 저장장치에 저장한 것", "물리 데이터저장소", "물리 데이터 저장소"],
  ["공동으로 사용될 데이터를 중복을 배제하여 통합하고, 쉽게 접근하여 처리할 수 있도록 저장장치에 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터", "데이터베이스"],
  // ["데이터베이스", "공동으로 사용될 데이터를 중복을 배제하여 통합하고, 쉽게 접근하여 처리할 수 있도록 저장장치에 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터"],
  // ["데이터베이스의 구분", "통합된 데이터(Integrated Data), 저장된 데이터(Stored Data), 운영 데이터(Operational Data), 공용 데이터(Shared Data)"],
  // ["통합된 데이터(Integrated Data)의 정의", "자료의 중복을 배제한 데이터의 모임"]
  ["데이터베이스의 데이터 중 자료의 중복을 배제한 데이터의 모임", "통합된 데이터", "Integrated Data"],
  // ["저장된 데이터(Stored Data)의 정의", "컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료"],
  ["데이터베이스의 데이터 중 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료", "저장된 데이터", "Stored Data"],
  // ["운영 데이터(Operational Data)의 정의", "조직의 고유한 업무를 수행하는 데 반드시 필요한 자료"],
  ["데이터베이스의 데이터 중 조직의 고유한 업무를 수행하는 데 반드시 필요한 자료", "운영 데이터", "Operational Data"],
  // ["공용 데이터(Shared Data)의 정의", "여러 응용 시스템들이 공동으로 소유하고 유지하는 자료"],
  ["데이터베이스의 데이터 중 여러 응용 시스템들이 공동으로 소유하고 유지하는 자료", "공용 데이터", "Shared Data"],
  ["데이터베이스 관리 시스템의 영어 풀네임(Full-Name)", "DataBase Management System"],
  ["데이터베이스 관리 시스템의 영어 약자", "DBMS"],
  // ["데이터베이스 관리 시스템의 정의", "사용자의 요구에 따라 정보를 생산해주고, 데이터베이스를 관리해주는 소프트웨어"],
  ["사용자의 요구에 따라 정보를 생산해주고, 데이터베이스를 관리해주는 소프트웨어", "데이터베이스 관리 시스템", "DBMS", "DataBase Management System)"],
  ["DBMS의 필수 기능 3가지", "정의 기능, 조작 기능, 제어 기능", "정의, 조작, 제어"],
  // ["정의(Definition) 기능의 정의", "데이터의 형(Type)과 구조에 대한 정의, 이용 방식, 제약 조건 등을 명시하는 기능"],
  ["데이터의 형(Type)과 구조에 대한 정의, 이용 방식, 제약 조건 등을 명시하는 기능", "정의 기능", "정의(Definition) 기능"],
  // ["조작(Manipulation) 기능의 정의", "데이터 검색, 갱신, 삽입, 삭제 등을 위해 인터페이스 수단을 제공하는 기능"],
  ["데이터 검색, 갱신, 삽입, 삭제 등을 위해 인터페이스 수단을 제공하는 기능", "조작(Manipulation) 기능", "조작 기능"],
  // ["제어(Control) 기능의 정의", "데이터의 무결성, 보안, 권한 검사, 병행 제어를 제공하는 기능"],
  ["데이터의 무결성, 보안, 권한 검사, 병행 제어를 제공하는 기능", "제어(Control) 기능", "제어 기능"],
  ["데이터의 독립성의 종류", "논리적 독립성, 물리적 독립성"],
  ["데이터의 독립성과 대비되는 단어", "종속성"],
  // ["논리적 독립성의 정의", "응용 프로그램과 데이터베이스를 독립시킴으로써, 데이터의 논리적 구조를 변경시키더라도 응용 프로그램은 영향을 받지 않음"],
  ["응용 프로그램과 데이터베이스를 독립시킴으로써, 데이터의 논리적 구조를 변경시키더라도 응용 프로그램은 영향을 받지 않는 독립성", "논리적 독립성"],
  // ["물리적 독립성의 정의", "응용 프로그램과 보조기억장치 같은 물리적 장치를 독립시킴으로써, 디스크를 추가/변경하더라도 응용 프로그램은 영향을 받지 않음"],
  ["응용 프로그램과 보조기억장치 같은 물리적 장치를 독립시킴으로써, 디스크를 추가/변경하더라도 응용 프로그램은 영향을 받지 않는 독립성", "물리적 독립성"],
  // ["스키마(Schema)의 정의", "데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 것"],
  ["데이터베이스의 구조와 제약조건에 관한 전반적인 명세를 기술한 것", "스키마", "Schema"],
  ["스키마의 영어 풀네임(Full-Name)", "Schema"],
  ["스키마(Schema)의 종류", "외부 스키마, 개념 스키마, 내부 스키마"],
  // ["외부 스키마의 정의", "사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 것"],
  ["사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 스키마", "외부 스키마"],
  // ["개념 스키마의 정의", "데이터베이스의 전체적인 논리적 구조. 모든 응용 프로그램이나 사용자들이 필요로 하는 데이터를 종합한 조직 전체의 데이터베이스로, 하나만 존재함"],
  ["데이터베이스의 전체적인 논리적 구조. 모든 응용 프로그램이나 사용자들이 필요로 하는 데이터를 종합한 조직 전체의 데이터베이스로, 하나만 존재하는 스키마", "개념 스키마"],
  // ["내부 스키마의 정의", "물리적 저장장치의 입장에서 본 데이터베이스 구조. 실제로 저장될 레코드의 형식, 저장 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 나타냄"],
  ["물리적 저장장치의 입장에서 본 데이터베이스 구조. 실제로 저장될 레코드의 형식, 저장 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 나타내는 스키마", "내부 스키마"]
];

export const QA005 = [
  ["사용자의 요구를 분석하여 그것들을 컴퓨터에 저장할 수 있는 데이터베이스의 구조에 맞게 변형한 후 DBMS로 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것", "데이터베이스 설계"],
  ["데이터베이스 설계 시 고려사항 6가지", "무결성, 일관성, 회복, 효율성, 보안, 데이터베이스 확장"],
  // ["데이터베이스 설계 시 고려사항 중 무결성의 정의", "삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 함"],
  ["데이터베이스 설계 시 고려사항 중 삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 하는 것을 뜻하는 용어", "무결성"],
  // ["데이터베이스 설계 시 고려사항 중 일관성의 정의", "데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝가지 변함없이 일정해야 함"],
  ["데이터베이스 설계 시 고려사항 중 데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝가지 변함없이 일정해야 하는 것을 뜻하는 용어", "일관성"],
  // ["데이터베이스 설계 시 고려사항 중 회복의 정의", "시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야 함"],
  ["데이터베이스 설계 시 고려사항 중 시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야 하는 것을 뜻하는 용어", "회복"],
  // ["데이터베이스 설계 시 고려사항 중 보안의 정의", "불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야 함"],
  ["데이터베이스 설계 시 고려사항 중 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야 하는 것을 뜻하는 용어", "보안"],
  // ["데이터베이스 설계 시 고려사항 중 효율성의 정의", "응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야 함"],
  ["데이터베이스 설계 시 고려사항 중 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야 하는 것을 뜻하는 용어", "효율성"],
  // ["데이터베이스 설계 시 고려사항 중 데이터베이스 확장의 정의", "데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 함"],
  ["데이터베이스 설계 시 고려사항 중 데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 하는 것을 뜻하는 용어", "데이터베이스 확장"],
  ["데이터베이스 설계 순서", "요구 조건 분석 > 개념적 설계 > 논리적 설계 > 물리적 설계 > 구현"],
  // ["요구 조건 분석의 정의", "데이터베이스를 사용할 사람으로부터 필요한 용도를 파악하는 것"],
  ["데이터베이스 설계 순서 중 데이터베이스를 사용할 사람으로부터 필요한 용도를 파악하는 단계", "요구 조건 분석"],
  ["데이터베이스 설계 순서 중 데이터베이스 사용자에 따른 수행 업무와 필요한 데이터의 종류, 용도, 처리 형태, 흐름, 제약 조건 등을 수집하는 단계", "요구 조건 분석"],
  ["데이터베이스 설계 순서 중 수집된 정보를 바탕으로 요구 조건 명세를 작성하는 단계", "요구 조건 분석"],
  // ["개념적 설계의 정의", "현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정"],
  ["데이터베이스 설계 순서 중 개념 스키마 모델링과 트랜잭션 모델링을 병행 수행하는 단계", "개념적 설계"],
  ["데이터베이스 설계 순서 중 요구 분석에서 나온 결과인 요구 조건 명세를 DBMS에 독립적인 E-R 다이어그램으로 작성하는 단계", "개념적 설계"],
  ["데이터베이스 설계 순서 중 DBMS에 독립적인 개념 스키마를 설계하는 단계", "개념적 설계"],
  // ["논리적 설계의 정의", "현실 세계에서 발생하는 자료를 특정 DBMS가 지원하는 논리적 자료 구조로 변환시키는 과정"],
  ["데이터베이스 설계 순서 중 개념 세계의 데이터를 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계로 표현되는 논리적 구조의 데이터로 모델화하는 단계", "논리적 설계"],
  ["데이터베이스 설계 순서 중 개념 스키마를 평가 및 정제하고 DBMS에 따라 서로 다른 논리적 스키마를 설계하는 단계", "논리적 설계"],
  ["데이터베이스 설계 순서 중 트랜잭션 인터페이스를 설계하는 단계", "논리적 설계"],
  // ["물리적 설계의 정의", "논리적 구조로 표현된 데이터를 물리적 구조의 데이터로 변환하는 과정"],
  ["데이터베이스 설계 순서 중 다양한 데이터베이스 응용에 대해 처리 성능을 얻기 위해 데이터베이스 파일의 저장 구조 및 액세스 경로를 결정하는 단계", "물리적 설계"],
  ["데이터베이스 설계 순서 중 저장 레코드의 형식, 순서, 접근 경로, 조회 집중 레코드 등의 정보를 사용하여 데이터가 컴퓨터에 저장되는 방법을 묘사하는 단계", "물리적 설계"],
  // ["데이터베이스 구현의 정의", "논리적 설계와 물리적 설계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정"],
  ["데이터베이스 설계 순서 중 사용하려는 특정 DBMS의 DDL(데이터 정의어)을 이용하여 데이터베이스 스키마를 기술한 후 컴파일하여 빈 데이터베이스 파일을 생성하는 단계", "데이터베이스 구현"],
  ["데이터베이스 설계 순서 중 응용 프로그램을 뒤한 트랜잭션을 작성하는 단계", "데이터베이스 구현"],
  ["데이터베이스 설계 순서 중 데이터베이스 접근을 위한 응용 프로그램을 작성하는 단계", "데이터베이스 구현"]
];

export const QA006 = [
  ["E-R 모델의 영어 풀네임(Full-Name)", "Entity-Relationship"],
  ["개체와 개체 간의 관계를 기본 요소로 이용하여 현실 세계의 무질서한 데이터를 개념적인 논리 데이터로 표현하기 위한 방법", "E-R 모델"],
  ["1976년 피터 첸(Peter Chen)에 의해 제안되고 기본적인 구성 요소가 정립되었음", "E-R 모델"],
  ["개념적 데이터 모델의 가장 대표적인 것", "E-R 모델"],
  ["개체 타입(Entity Type)과 이들 간의 관계 타입(Relationship Type)을 이용해 현실 세계를 개념적으로 표현", "E-R 모델"],
  ["E-R 모델에서 데이터를 묘사하는 3가지", "개체(Entity), 관계(Relationship), 속성(Attribute)", "개체, 관계, 속성"],
  ["E-R 다이어그램으로 표현하며, 1:1, 1:N, N:M 등의 관계 유형을 제한 없이 나타낼 수 있음", "E-R 모델"],
  ["E-R 다이어그램 중 사각형이 의미하는 것", "개체(Entity) 타입", "개체 타입"],
  ["E-R 다이어그램 중 개체(Entity) 타입의 기호", "사각형"],
  ["E-R 다이어그램 중 마름모가 의미하는 것", "관계 타입", "관계(Relationship) 타입"],
  ["E-R 다이어그램 중 관계(Relationship) 타입의 기호", "마름모"],
  ["E-R 다이어그램 중 타원이 의미하는 것", "속성(Attribute) 타입", "속성 타입"],
  ["E-R 다이어그램 중 속성(Attribute) 타입의 기호", "타원"],
  ["E-R 다이어그램 중 이중 타원이 의미하는 것", "다중값 속성(복합 속성)", "다중값 속성", "복합 속성"],
  ["E-R 다이어그램 중 다중값 속성(복합 속성)의 기호", "이중 타원"],
  ["E-R 다이어그램 중 밑줄 타원이 의미하는 것", "기본키 속성"],
  ["E-R 다이어그램 중 기본키 속성의 기호", "밑줄 타원"],
  ["E-R 다이어그램 중 복수 타원이 의미하는 것", "복합 속성"],
  ["E-R 다이어그램 중 복합 속성의 기호", "복수 타원"],
  // ["E-R 다이어그램 중 관계가 의미하는 것", "1:1, 1:N, N:M 등의 개체 간 관계에 대한 대응수를 선 위에 기술하는 것을 의미하는 것"],
  ["E-R 다이어그램 중 1:1, 1:N, N:M 등의 개체 간 관계에 대한 대응수를 선 위에 기술하는 기호", "관계"],
  // ["E-R 다이어그램 중 선, 링크가 의미하는 것", "개체 타입과 속성을 연결"],
  ["E-R 다이어그램 중 개체 타입과 속성을 연결의 기호", "선, 링크"]
];

export const QA007 = [
  // ["관계형 데이터베이스의 정의", "2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 데이터베이스"],
  ["2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 데이터베이스", "관계형 데이터베이스"],
  ["1970년 IBM에 근무하던 코드(E. F. Codd)에 의해 처음 제안된 것", "관계형 데이터베이스"],
  ["개체(Entity)와 관계(Relationship)를 모두 릴레이션(Relation)이라는 표(Table)로 표현하기 때문에 존재하는 릴레이션", "개체를 표현하는 개체 릴레이션, 관계를 표현하는 관계 릴레이션"],
  // ["관계형 데이터베이스의 장점", "간결하고 보기 편리하며, 다른 데이터베이스로의 변환이 용이함"],
  // ["관계형 데이터베이스의 단점", "성능이 다소 떨어짐"],
  // ["릴레이션(Relation)", "데이터들을 표(Table)의 형태로 표현한 것으로, 구조를 나타내는 릴레이션 스키마와 실제 값들인 릴레이션 인스턴스로 구성됨"],
  ["데이터들을 표(Table)의 형태로 표현한 것으로, 구조를 나타내는 릴레이션 스키마와 실제 값들인 릴레이션 인스턴스로 구성됨", "릴레이션(Relation)", "릴레이션", "Relation"],
  ["릴레이션에서 구조를 나타내는 용어", "릴레이션 스키마"],
  ["릴레이션에서 실제 값들을 뜻하는 용어", "릴레이션 인스턴스"]
  ["릴레이션에서 데이터 개체를 구성하고 있는 속성들에 데이터 타입이 정의되어 구체적인 데이터 값을 가진 것을 뜻하는 용어", "릴레이션 인스턴스"],
  // ["관계형 데이터베이스의 릴레이션 중 튜플(Tuple)", "릴레이션을 구성하는 각각의 행"],
  ["릴레이션을 구성하는 각각의 행을 뜻하는 용어", "튜플", "Tuple"],
  ["릴레이션을 구성하는 각각의 행을 뜻하는 용어의 영어 풀네임(Full-Name)", "Tuple"],
  ["관계형 데이터베이스의 릴레이션 중 카디널리티(Cardinality) 또는 기수, 대응수", "튜플의 수"],
  ["관계형 데이터베이스의 릴레이션 중 튜플의 수를 뜻하는 용어", "카디널리티", "Cardinality", "기수", "대응수"],
  ["관계형 데이터베이스의 릴레이션 중 카디널리티(Cardinality)의 정의", "튜플의 수"],
  ["관계형 데이터베이스의 릴레이션 중 기수의 정의", "튜플의 수"],
  ["관계형 데이터베이스의 릴레이션 중 대응수의 정의", "튜플의 수"],
  ["관계형 데이터베이스의 릴레이션 중 속성의 모임으로 구성되며, 파일 구조에서 레코드와 같은 의미인 것", "튜플", "Tuple"],
  ["관계형 데이터베이스의 릴레이션 중 속성(Attribute)의 정의", "데이터베이스를 구성하는 가장 작은 논리적 단위"],
  ["관계형 데이터베이스의 릴레이션 중 데이터베이스를 구성하는 가장 작은 논리적 단위", "속성", "Attribute"],
  ["관계형 데이터베이스의 릴레이션 중 파일 구조상의 데이터 항목 또는 데이터 필드에 해당되며, 개체의 특성을 기술하는 것", "속성", "Attribute"],
  ["관계형 데이터베이스의 릴레이션 중 디그리(Degree) 또는 차수의 정의", "속성의 수"],
  ["관계형 데이터베이스의 릴레이션 중 속성의 수를 뜻하는 용어", "디그리", "Degree", "차수"],
  ["관계형 데이터베이스의 릴레이션 중 도메인(Domain)의 정의", "하나의 애트리뷰트가 취할 수 있는 같은 타입의 원자값들의 집합"],
  ["관계형 데이터베이스의 릴레이션 중 하나의 애트리뷰트가 취할 수 있는 같은 타입의 원자값들의 집합", "도메인", "Domain"],
  ["관계형 데이터베이스의 릴레이션 중 실제 애트리뷰트 값이 나타날 때 그 값의 합법 여부를 시스템이 검사하는데에도 이용되는 것", "도메인", "Domain"],
  // ["관계형 데이터베이스의 릴레이션의 특징"]
  // ["관계형 데이터 모델(Relational Data Model)", "2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 DB 구조"],
  ["2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 DB 구조의 영어 풀네임(Full-Name)", "Relational Data Model"],
  ["2차원적인 표(Table)를 이용해서 데이터 상호 관계를 정의하는 DB 구조", "관계형 데이터 모델", "Relational Data Model"],
  ["가장 널리 사용되는 데이터 모델", "관계형 데이터 모델", "Relational Data Model"],
  ["파일 구조처럼 구성한 테이블들을 하나의 DB로 묶어서 테이블 내에 있는 속성들 간의 관계(Relationship)를 설정하거나 테이블 간의 관계를 설정하여 이용하는 것", "관계형 데이터 모델", "Relational Data Model"],
  ["기본키(Primary Key)와 이를 참조하는 외래키(Foreign Key)로 데이터간의 관계를 표현하는 것", "관계형 데이터 모델", "Relational Data Model"],
  ["계층 모델과 망 모델의 복잡한 구조를 단순화시킨 모델", "관계형 데이터 모델", "Relational Data Model"],
  ["관계형 모델의 대표적인 언어", "SQL"]
];

export const QA008 = [
  ["데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미하는 것", "트랜잭션", "Transaction"],
  ["데이터베이스 시스템에서 병행 제어 및 회복 작업 시 처리되는 작업의 논리적 단위로 사용되는 것", "트랜잭션", "Transaction"],
  ["사용자가 시스템에 대한 서비스 요구 시 시스템이 응답하기 위한 상태 변환 과정의 작업 단위로 사용되는 것", "트랜잭션", "Transaction"],
  ["트랜잭션의 특징 4가지", "원자성, 일관성, 독립성, 지속성", "Atomicity, Consistency, Isolation, Durability"],
  ["트랜잭션의 특징 중 트랜잭션의 연산은 데이터베이스에 모두 반영되도록 완료(Commit) 되든지 아니면 전혀 반영되지 않도록 복구(Rollback) 되어야 하는 것을 뜻하는 용어", "원자성", "Atomicity"],
  ["트랜잭션의 특징 중 트랜잭션이 그 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환하는 것을 뜻하는 용어", "일관성", "Consistency"],
  ["트랜잭션의 특징 중 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행중에 다른 트랜잭션의 연산에 끼어들 수 없는 것을 뜻하는 용어", "독립성", "격리성", "순차성", "Isolation"],
  ["트랜잭션의 특징 중 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되어야 한다는 것을 뜻하는 용어", "영속성", "지속성", "Durability"],
  ["프로세스와 테이블 간에 CRUD 매트릭스를 만들어서 트랜잭션을 분석하는 것을 뜻하는 용어", "CRUD 분석"],
  ["많은 트랜잭션이 몰리는 테이블을 파악할 수 있어서 디스크 구성 시 유용한 자료로 활용할 수 있는 것", "CRUD 분석"],
  ["2차원 형태의 표로서, 행(Row)에는 프로세스를, 열(Column)에는 테이블을, 행과 열이 만나는 위치에는 프로세스가 테이블에 발생시키는 변화를 표시하여 프로세스와 데이터 간의 관계를 분석하는 분석표", "CRUD 매트릭스"],
  ["CRUD 매트릭스에서 행(Row)에 표시되는 것", "프로세스"],
  ["CRUD 매트릭스에서 열(Column)에 표시되는 것", "테이블"],
  ["CRUD 매트릭스에서 행(Row)과 열(Column)이 만는 위치에 표시되는 것", "프로세스가 테이블에 발생시키는 변화", "변화"],
  ["2차원 형태의 표로서, 프로세스와 데이터 간의 관계를 분석하는 분석표", "CRUD 매트릭스"],
  ["트랜잭션이 테이블에 수행하는 작업을 검증하는 것", "CRUD 매트릭스"],
  ["CRUD 매트릭스의 우선순위", "C > D > U > R"],
  ["CRUD 매트릭스를 기반으로 테이블에 발생하는 트랜잭션 양을 분석하여 테이블에 저장되는 데이터의 양을 유추하고 이를 근거로 DB의 용량 산정 및 구조의 최적화를 목적으로 하는 분석", "트랜잭션 분석"],
  ["트랜잭션 분석을 수행하는 사람", "업무 개발 담당자"],
  ["CRUD 매트릭스를 기반으로 트랜잭션 양을 분석하여 데이터의 양을 유추한 후 DB 용량 산정 및 구조 최적화를 하는 분석", "트랜잭션 분석"],
  ["프로세스가 과도하게 접근하는 테이블을 확인할 수 있어서 집중 접근 테이블을 여러 디스크에 분산 배치하여 성능 향상을 가져올 수 있는 분석", "트랜잭션 분석"],
  ["단위 프로세스와 CRUD 매트릭스를 이용하여 작성하는 것", "트랜잭션 분석서"],
  ["구성요소가 단위 프로세스, CRUD 연산, 테이블명, 컬럼명, 테이블 참조 횟수, 트랜잭션 수, 발생 주기 등인 분석서", "트랜잭션 분석서"]
]; 

export const QA009 = [
  ["TCP/IP 프로토콜을 기반으로 하여 전 세계 수많은 컴퓨터와 네트워크들이 연결된 광범위한 컴퓨터 통신망", "Internet", "인터넷"],
  ["인터넷에 연결된 모든 컴퓨터 자원글 구분하기 위한 고유한 주소", "IP 주소", "Internet Protocol Address"],
  ["8비트씩 4부분 총 32비트로 구성되어 있으며, 네트워크 부분의 길이에 따라 A~E클래스의 단계로 구성된 IP 주소", "IPv4", "Internet Protocol verson 4"],
  ["IPv4에서 0~127로 시작하며 국가나 대형 통신망에 사용되는 클래스", "A클래스", "A Class"],
  ["IPv4에서 128~191로 시작하며 중대형에 사용되는 클래스", "B클래스", "B Class"],
  ["IPv4에서 192~223으로 시작하며 소규모 통신망에 사용되는 클래스", "C클래스", "C Class"],
  ["IPv4에서 224~239로 시작하며 멀티캐스트용으로 사용되는 클래스", "D클래스", "D Class"],
  ["IPv4에서 실험적 주소이며 공용되지 않는 클래스", "E클래스", "E Class"],
  ["할당된 네트워크 주소를 다시 여러 개의 작은 네트워크로 나누어 사용하는 것", "서브네팅", "Subnetting"],
  ["4바이트의 IP 주소 중 네트워크 주소와 호스트 주소를 구분하기 위한 비트", "서브넷 마스크", "Subnet Mask"],
  ["서브넷 마스크를 변경하여 네트워크 주소를 여러 개로 분할하여 사용하는 것", "서브네팅", "Subnetting"],
  ["192.168.1.0/24 네트워크를 FLSM 방식을 이용하여 3개의 Subnet으로 나누고 IP Subnet-Zero를 적용했다. 이때 서브네팅된 네트워크 중 3번째 네크워크의 IP 주소를 쓰시오", "192.168.1.128 ~ 192.168.1.191"],
  ["현재 사용하고 있는 IP 주소 체계인 IPv4의 주소 부족 문제를 해결하기 위해 개발된 것", "IPv6", "Internet Protocol version 6"],
  ["IPv4는 32비트(8비트씩 4부분)로 구성되어 있으며, IPv6는 (     )비트로 구성되어 있다", "128"],
  ["16비트씩 8부분, 총 128비트로 구성되어 있는 IP 주소", "IPv6", "Internet Protocol version 6"],
  ["IPv6의 보안 문제 해결을 지원하는 것 중 사용자의 식별과 접근 권한을 검증을 뜻하는 용어", "인증성"],
  ["IPv6의 보안 문제 해결을 지원하는 것 중 시스템 내의 정보와 자원은 인가된 사용자에게만 접근을 허용한다는 용어", "기밀성"],
  ["IPv6의 보안 문제 해결을 지원하는 것 중 시스탬 내의 정보는 인가된 사용자만 수정이 가능하다는 용어", "데이터 무결성", "무결성"],
  ["패킷 전송 시 제일 앞에 배치되는 영역으로, IP 주소의 버전 인증 정보, 패킷에 대한 정보, 출발 주소, 도착 주소 등의 다양한 정보를 포함하는 것", "헤더", "Header"],
  ["각 부분을 16진수로 표현하고 콜론(:)으로 구분하는 IP 주소", "IPv6", "Internet Protocol version 6"],
  ["IPv6의 세 가지 주소 체계", "유니캐스트, 멀티캐스트, 애니캐스트"],
  ["IPv6의 주소 체계 중 단일 송신자와 단일 수신자 간의 통신(1 대 1 통신에 사용)에 해당하는 것", "유니캐스트", "Unicast"],
  ["IPv6의 주소 체계 중 단일 송신자와 다중 수신자 간의 통신(1 대 다 통신에 사용)에 해당하는 것", "멀티캐스트", "Multicast"],
  ["IPv6의 주소 체계 중 단일 송신자와 가장 가까이 있는 단일 수신자 간의 통신(1 대 1 통신에 사용)에 해당하는 것", "애니캐스트", "Anicast"],
  ["숫자로 된 IP 주소를 사람이 이해하기 쉬운 문자 형태로 표현한 것", "도메인 네임", "Domain Name"],
  ["호스트 컴퓨터 이름, 소속 기관 이름, 소속 기관의 종류, 소속 국가명 순으로 구성되며, 왼쪽에서 오른쪽으로 갈수록 상위 도메인을 의미하는 것", "도메인 네임", "Domain Name"],
  ["문자로 된 도메인 네임을 컴퓨터가 이해할 수 있는 IP 주소로 변환하는 역할을 하는 시스템", "DNS", "Domain Name System"],
  ["문자로 된 도메인 네임을 컴퓨터가 이해할 수 있는 IP 주소로 변환하는 역할을 하는 서버", "DNS 서버"]
];

export const QA010 = [
  ["다른 시스템 간의 원활한 통신을 위해 ISO(국제표준화기구)에서 제안한 통신 규약(Protocol)", "OSI 참조 모델", "Open System Interconnection 참조 모델"],
  ["OSI 7계층 중 1~3 계층을 뜻하는 용어", "하위 계층"],
  ["OSI 7계층 중 4~7 계층을 뜻하는 용어", "상위 계층"],
  ["OSI 7계층 중 하위 계층의 순서", "물리 > 데이터 링크 > 네트워크"],
  ["OSI 7계층 중 상위 계층의 순서", "전송 > 세션 > 표현 > 응용"],
  ["OSI 7계층 중 전송에 필요한 두 장치 간의 실제 접속과 절단 등 기계적, 전기적, 기능적, 절차적 특성에 대한 규칙을 정의하는 계층", "물리 계층", "Physical Layer"],
  ["OSI 7계층 중 전송에 필요한 두 장치 간의 실제 접속과 절단 등 기계적, 전기적, 기능적, 절차적 특성에 대한 규칙을 정의하는 계층의 영어 풀네임(Full-Name)", "Physical Layer"],
  ["OSI 7계층 중 물리적 전송 매체와 전송 신호 방식을 정의하며 RS-232C, X.21 등의 표준이 있는 계층", "물리 계층", "Physical Layer"],
  ["OSI 7계층 중 리피터, 허브 등이 관련 장비인 계층", "물리 계층", "Physical Layer"],
  ["OSI 7계층 중 두 개의 인접한 개방 시스템들 간에 신뢰성 있고 효율적인 정보 전송을 할 수 있도록 시스템 간 연결 설정과 유지 및 종료를 담당하는 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 두 개의 인접한 개방 시스템들 간에 신뢰성 있고 효율적인 정보 전송을 할 수 있도록 시스템 간 연결 설정과 유지 및 종료를 담당하는 계층의 영어 풀네임(Full-Name)", "Data Link Layer"],
  ["OSI 7계층 중 송신 측과 수신 측의 속도 차이 해결을 위한 흐름 제어 기능을 하는 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 프레임의 시작과 끝을 구분하기 위한 프레임의 동기화 기능을 하며 프레임의 순서적 전송을 위한 순서 제어 기능을 하는 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 오류의 검출과 회복을 위한 오류 제어 기능을 하는 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 HDLC, LAPB, LLC, MAC, LAPD, PPP 등의 표준이 있는 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 랜카드, 브리지, 스위치 등이 관련 장비인 계층", "데이터 링크 계층", "Data Link Layer"],
  ["OSI 7계층 중 개방 시스템들 간의 네트워크 연결을 관리하는 기능과 데이터의 교환 및 중계 기능을 하는 계층", "네트워크 계층", "망 계층", "Network Layer"],
  ["OSI 7계층 중 개방 시스템들 간의 네트워크 연결을 관리하는 기능과 데이터의 교환 및 중계 기능을 하는 계층의 영어 풀네임(Full-Name)", "Network Layer"],
  ["OSI 7계층 중 네트워크 연결을 설정, 유지, 해제하는 기능을 하는 계층", "네트워크 계층", "망 계층", "Network Layer"],
  ["OSI 7계층 중 경로 설정(Routing), 데이터 교환 및 중계, 트래픽 제어, 패킷 정보 전송을 수행하는 계층", "네트워크 계층", "망 계층", "Network Layer"],
  ["OSI 7계층 중 X.25, IP 등의 표준이 있는 계층", "네트워크 계층", "망 계층", "Network Layer"],
  ["OSI 7계층 중 라우터 등이 관련 장비인 계층", "네트워크 계층", "망 계층", "Network Layer"],
  ["OSI 7계층 중 논리적 안정과 균일한 데이터 전송 서비스를 제공함으로써 종단 시스템(End-to-End) 간에 투명한 데이터 전송을 가능하게 하는 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 논리적 안정과 균일한 데이터 전송 서비스를 제공함으로써 종단 시스템(End-to-End) 간에 투명한 데이터 전송을 가능하게 하는 계층의 영어 풀네임(Full-Name)", "Transport Layer"],
  ["OSI 7계층 중 하위 3계층과 상위 3계층의 인터페이스(Interface)를 담당하는 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 종단 시스템(End-to-End) 간의 전송 연결 설정, 데이터 전송, 연결 해제 기능을 하는 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 주소 설정, 다중화(분할 및 재조립), 오류 제어, 흐름 제어를 수행하는 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 TCP, UDP 등의 표준이 있는 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 게이트웨이 등이 관련 장비인 계층", "전송 계층", "Transport Layer"],
  ["OSI 7계층 중 송/수신 측 간의 관련성을 유지하고 대화 제어를 담당하는 계층", "세션 계층", "Session Layer"],
  ["OSI 7계층 중 송/수신 측 간의 관련성을 유지하고 대화 제어를 담당하는 계층의 영어 풀네임(Full-Name)", "Session Layer"],
  ["OSI 7계층의 세션 계층에서 오류가 있는 데이터의 회복을 위해 사용하는 것을 뜻하는 용어", "동기점"],
  ["OSI 7계층 중 응용 계층으로부터 받은 데이터를 세션 계층에 보내기 전에 통신에 적당한 형태로 변환하고, 세션 계층에서 받은 데이터는 응용 계층에 맞게 변환하는 기능을 하는 계층", "표현 계층", "Presentation Layer"],
  ["OSI 7계층 중 응용 계층으로부터 받은 데이터를 세션 계층에 보내기 전에 통신에 적당한 형태로 변환하고, 세션 계층에서 받은 데이터는 응용 계층에 맞게 변환하는 기능을 하는 계층의 영어 풀네임(Full-Name)", "Presentation Layer"],
  ["OSI 7계층 중 서로 다른 데이터 표현 형태를 갖는 시스템 간의 상호 접속을 위해 필요한 계층", "표현 계층", "Presentation Layer"],
  ["OSI 7계층 중 코드 변환, 데이터 암호화, 데이터 압축, 구문 검색, 정보 형식(포맷) 변환, 문맥관리 기능을 하는 계층", "표현 계층", "Presentation Layer"],
  ["OSI 7계층 중 사용자(응용 프로그램)가 OSI 환경에 접근할 수 있도록 서비스를 제공하는 계층", "응용 계층", "Application Layer"],
  ["OSI 7계층 중 사용자(응용 프로그램)가 OSI 환경에 접근할 수 있도록 서비스를 제공하는 계층의 영어 풀네임(Full-Name)", "Application Layer"],
  ["OSI 7계층 중 응용 프로세스 간의 정보 교환, 전자 사서함, 파일 전송, 가상 터미널 등의 서비스를 제공하는 계층", "응용 계층", "Application Layer"]
];